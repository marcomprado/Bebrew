# üç∫ Bebrew - GitIgnore para Projeto Python

# =============================================
# Python
# =============================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# =============================================
# IDEs e Editores
# =============================================

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/

# Visual Studio Code
.vscode/
*.code-workspace

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# =============================================
# Sistema Operacional
# =============================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# =============================================
# Bebrew - Espec√≠fico do Projeto
# =============================================

# Banco de dados do projeto
database/
*.db
*.sqlite
*.sqlite3

# Arquivos de configura√ß√£o locais
config/local_*
config/dev_*
config/*.local.*

# Logs da aplica√ß√£o
logs/
*.log

# Dados de produ√ß√£o (receitas, lotes, etc)
data/productions/
data/recipes/backup/
data/exports/
*.json.bak
*.backup

# Assets tempor√°rios
assets/temp/
assets/cache/

# Screenshots e imagens de teste
screenshots/
test_images/

# Arquivos de configura√ß√£o do usu√°rio
user_preferences.json
user_settings.json

# Cache da aplica√ß√£o
cache/
.cache/

# Arquivos tempor√°rios do matplotlib
matplotlib_temp/

# Backups autom√°ticos
*.auto-backup
backup_*/

# =============================================
# Desenvolvimento e Testes
# =============================================

# Arquivos de teste tempor√°rios
test_data/
temp_test_*
*.test

# Dados de desenvolvimento
dev_data/
mock_data/

# Profiling
*.prof

# =============================================
# Depend√™ncias Opcionais
# =============================================

# Se usar conda
# .conda/

# Se usar Docker
# Dockerfile*
# docker-compose*
# .dockerignore

# =============================================
# Arquivos Pessoais e Sens√≠veis
# =============================================

# Chaves e tokens
*.key
*.pem
api_keys.txt
secrets.json

# Arquivos pessoais
TODO.txt
NOTES.md
personal_*

# Configura√ß√µes espec√≠ficas do desenvolvedor
.personal/
.dev/ 